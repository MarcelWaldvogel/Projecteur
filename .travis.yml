language: cpp
matrix:
  include:
  - os: linux
    dist: bionic
    env: DOCKER_IMG=jahnf/projecteur:archlinux
#  - os: linux
#    dist: xenial
#    env: DOCKER_IMG=jahnf/projecteur:debian-stretch
  - os: linux
    dist: bionic
    env: DOCKER_IMG=jahnf/projecteur:debian-buster
  - os: linux
    dist: xenial
    env: DOCKER_IMG=jahnf/projecteur:ubuntu-18.04
  - os: linux
    dist: bionic
    env: DOCKER_IMG=jahnf/projecteur:ubuntu-20.04
#  - os: linux
#    dist: xenial
#    env: DOCKER_IMG=jahnf/projecteur:opensuse-15.0
  - os: linux
    dist: xenial
    env: DOCKER_IMG=jahnf/projecteur:opensuse-15.1
#  - os: linux
#    dist: bionic
#    env: DOCKER_IMG=jahnf/projecteur:fedora-30
#  - os: linux
#    dist: bionic
#    env: DOCKER_IMG=jahnf/projecteur:fedora-31
  - os: linux
    dist: bionic
    env: DOCKER_IMG=jahnf/projecteur:fedora-32
  - os: linux
    dist: bionic
    env: DOCKER_IMG=jahnf/projecteur:centos-8
script:
- git fetch --tags
- "[ -f $(git rev-parse --git-dir)/shallow ] && git fetch --unshallow || echo No need to unshallow..."
- docker pull ${DOCKER_IMG}
- docker run --name build --env TRAVIS_BRANCH=${TRAVIS_BRANCH} -d -v `pwd`:/source:ro -ti ${DOCKER_IMG}
- docker exec -it build /bin/bash -c "mkdir -p /build/dist-pkg && cd /build && cmake /source"
- docker exec -it build /bin/bash -c "cd /build && cmake --build ."
- docker exec -it build /bin/bash -c "cd /build && cmake --build . --target dist-package"
- docker exec -it build /bin/bash -c "cd /build && ./projecteur -f"
- "[ \"${BUILD_SOURCE_PKG}\" = 1 ] && docker exec -it build /bin/bash -c \"cd /build && cmake --build . --target source-archive\" || true"
- docker cp build:/build/dist-pkg .
- docker cp build:/build/travis-ci-bintray-deploy.json .
- ls -alh dist-pkg
